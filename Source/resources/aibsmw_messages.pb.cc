// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aibsmw_messages.proto

#include "aibsmw_messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class message_headerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<message_header>
      _instance;
} _message_header_default_instance_;
class generic_heartbeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<generic_heartbeat>
      _instance;
} _generic_heartbeat_default_instance_;
class remote_device_heartbeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<remote_device_heartbeat>
      _instance;
} _remote_device_heartbeat_default_instance_;
class request_remote_devicesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<request_remote_devices>
      _instance;
} _request_remote_devices_default_instance_;
class router_aliveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<router_alive>
      _instance;
} _router_alive_default_instance_;
class remote_devices_listDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<remote_devices_list>
      _instance;
} _remote_devices_list_default_instance_;
class remote_service_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<remote_service_request>
      _instance;
} _remote_service_request_default_instance_;
class remote_service_replyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<remote_service_reply>
      _instance;
} _remote_service_reply_default_instance_;
class system_notificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<system_notification>
      _instance;
} _system_notification_default_instance_;
class python_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<python_info>
      _instance;
} _python_info_default_instance_;
class host_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<host_info>
      _instance;
} _host_info_default_instance_;
class platform_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<platform_info>
      _instance;
} _platform_info_default_instance_;
class register_for_messageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<register_for_message>
      _instance;
} _register_for_message_default_instance_;
class deregister_for_messageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<deregister_for_message>
      _instance;
} _deregister_for_message_default_instance_;
namespace protobuf_aibsmw_5fmessages_2eproto {
void InitDefaultsmessage_headerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_message_header_default_instance_;
    new (ptr) ::message_header();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message_header::InitAsDefaultInstance();
}

void InitDefaultsmessage_header() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsmessage_headerImpl);
}

void InitDefaultsgeneric_heartbeatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_generic_heartbeat_default_instance_;
    new (ptr) ::generic_heartbeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::generic_heartbeat::InitAsDefaultInstance();
}

void InitDefaultsgeneric_heartbeat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsgeneric_heartbeatImpl);
}

void InitDefaultsremote_device_heartbeatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_remote_device_heartbeat_default_instance_;
    new (ptr) ::remote_device_heartbeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::remote_device_heartbeat::InitAsDefaultInstance();
}

void InitDefaultsremote_device_heartbeat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsremote_device_heartbeatImpl);
}

void InitDefaultsrequest_remote_devicesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_request_remote_devices_default_instance_;
    new (ptr) ::request_remote_devices();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_remote_devices::InitAsDefaultInstance();
}

void InitDefaultsrequest_remote_devices() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsrequest_remote_devicesImpl);
}

void InitDefaultsrouter_aliveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_router_alive_default_instance_;
    new (ptr) ::router_alive();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::router_alive::InitAsDefaultInstance();
}

void InitDefaultsrouter_alive() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsrouter_aliveImpl);
}

void InitDefaultsremote_devices_listImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_remote_devices_list_default_instance_;
    new (ptr) ::remote_devices_list();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::remote_devices_list::InitAsDefaultInstance();
}

void InitDefaultsremote_devices_list() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsremote_devices_listImpl);
}

void InitDefaultsremote_service_requestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_remote_service_request_default_instance_;
    new (ptr) ::remote_service_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::remote_service_request::InitAsDefaultInstance();
}

void InitDefaultsremote_service_request() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsremote_service_requestImpl);
}

void InitDefaultsremote_service_replyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_remote_service_reply_default_instance_;
    new (ptr) ::remote_service_reply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::remote_service_reply::InitAsDefaultInstance();
}

void InitDefaultsremote_service_reply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsremote_service_replyImpl);
}

void InitDefaultssystem_notificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_system_notification_default_instance_;
    new (ptr) ::system_notification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::system_notification::InitAsDefaultInstance();
}

void InitDefaultssystem_notification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultssystem_notificationImpl);
}

void InitDefaultspython_infoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_python_info_default_instance_;
    new (ptr) ::python_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::python_info::InitAsDefaultInstance();
}

void InitDefaultspython_info() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultspython_infoImpl);
}

void InitDefaultshost_infoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_host_info_default_instance_;
    new (ptr) ::host_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::host_info::InitAsDefaultInstance();
}

void InitDefaultshost_info() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultshost_infoImpl);
}

void InitDefaultsplatform_infoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultspython_info();
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultshost_info();
  {
    void* ptr = &::_platform_info_default_instance_;
    new (ptr) ::platform_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platform_info::InitAsDefaultInstance();
}

void InitDefaultsplatform_info() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsplatform_infoImpl);
}

void InitDefaultsregister_for_messageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_register_for_message_default_instance_;
    new (ptr) ::register_for_message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::register_for_message::InitAsDefaultInstance();
}

void InitDefaultsregister_for_message() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsregister_for_messageImpl);
}

void InitDefaultsderegister_for_messageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_deregister_for_message_default_instance_;
    new (ptr) ::deregister_for_message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::deregister_for_message::InitAsDefaultInstance();
}

void InitDefaultsderegister_for_message() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsderegister_for_messageImpl);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message_header, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message_header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message_header, process_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message_header, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message_header, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message_header, message_id_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::generic_heartbeat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::generic_heartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::generic_heartbeat, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::generic_heartbeat, start_time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_device_heartbeat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_device_heartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_device_heartbeat, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_device_heartbeat, device_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_device_heartbeat, ip_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_device_heartbeat, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_device_heartbeat, start_time_),
  2,
  0,
  1,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::request_remote_devices, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::request_remote_devices, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::request_remote_devices, header_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::router_alive, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::router_alive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::router_alive, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::router_alive, registered_messages_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_devices_list, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_devices_list, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_devices_list, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_devices_list, devices_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_service_request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_service_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_service_request, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_service_request, command_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_service_request, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_service_request, args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_service_request, kwargs_),
  3,
  4,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_service_reply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_service_reply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_service_reply, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_service_reply, call_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::remote_service_reply, reply_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_notification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_notification, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_notification, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_notification, message_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::python_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::python_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::python_info, build_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::python_info, build_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::python_info, compiler_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::python_info, branch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::python_info, implementation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::python_info, revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::python_info, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::python_info, exec_prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::python_info, is_conda_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::host_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::host_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::host_info, machine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::host_info, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::host_info, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::host_info, processor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::host_info, release_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::host_info, system_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::host_info, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::host_info, sys_platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::host_info, byteorder_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::platform_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::platform_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::platform_info, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::platform_info, python_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::platform_info, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::platform_info, start_time_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::register_for_message, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::register_for_message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::register_for_message, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::register_for_message, message_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::deregister_for_message, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::deregister_for_message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::deregister_for_message, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::deregister_for_message, message_id_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::message_header)},
  { 13, 20, sizeof(::generic_heartbeat)},
  { 22, 32, sizeof(::remote_device_heartbeat)},
  { 37, 43, sizeof(::request_remote_devices)},
  { 44, 51, sizeof(::router_alive)},
  { 53, 60, sizeof(::remote_devices_list)},
  { 62, 72, sizeof(::remote_service_request)},
  { 77, 85, sizeof(::remote_service_reply)},
  { 88, 96, sizeof(::system_notification)},
  { 99, 113, sizeof(::python_info)},
  { 122, 136, sizeof(::host_info)},
  { 145, 154, sizeof(::platform_info)},
  { 158, 165, sizeof(::register_for_message)},
  { 167, 174, sizeof(::deregister_for_message)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_message_header_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_generic_heartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_remote_device_heartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_request_remote_devices_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_router_alive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_remote_devices_list_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_remote_service_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_remote_service_reply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_system_notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_python_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_host_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_platform_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_register_for_message_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_deregister_for_message_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "aibsmw_messages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025aibsmw_messages.proto\"V\n\016message_heade"
      "r\022\017\n\007process\030\001 \002(\t\022\014\n\004host\030\002 \002(\t\022\021\n\ttime"
      "stamp\030\003 \002(\002\022\022\n\nmessage_id\030\004 \002(\t\"H\n\021gener"
      "ic_heartbeat\022\037\n\006header\030\001 \002(\0132\017.message_h"
      "eader\022\022\n\nstart_time\030\002 \002(\002\"\205\001\n\027remote_dev"
      "ice_heartbeat\022\037\n\006header\030\001 \002(\0132\017.message_"
      "header\022\023\n\013device_name\030\002 \002(\t\022\022\n\nip_addres"
      "s\030\004 \002(\t\022\014\n\004port\030\005 \002(\005\022\022\n\nstart_time\030\006 \002("
      "\002\"9\n\026request_remote_devices\022\037\n\006header\030\001 "
      "\002(\0132\017.message_header\"L\n\014router_alive\022\037\n\006"
      "header\030\001 \002(\0132\017.message_header\022\033\n\023registe"
      "red_messages\030\002 \003(\t\"G\n\023remote_devices_lis"
      "t\022\037\n\006header\030\001 \002(\0132\017.message_header\022\017\n\007de"
      "vices\030\002 \002(\t\"\205\002\n\026remote_service_request\022\037"
      "\n\006header\030\001 \002(\0132\017.message_header\022;\n\014comma"
      "nd_type\030\002 \002(\0162%.remote_service_request.C"
      "OMMAND_TYPES\022\016\n\006target\030\003 \002(\t\022\014\n\004args\030\004 \001"
      "(\t\022\016\n\006kwargs\030\005 \001(\t\"_\n\rCOMMAND_TYPES\022\013\n\007C"
      "MD_RUN\020\000\022\013\n\007CMD_SET\020\001\022\013\n\007CMD_GET\020\002\022\020\n\014CM"
      "D_CALLABLE\020\003\022\025\n\021CMD_PLATFORM_INFO\020\004\"\302\001\n\024"
      "remote_service_reply\022\037\n\006header\030\001 \002(\0132\017.m"
      "essage_header\022<\n\013call_result\030\002 \002(\0162\'.rem"
      "ote_service_reply.CALL_RESULT_TYPES\022\r\n\005r"
      "eply\030\003 \002(\t\"<\n\021CALL_RESULT_TYPES\022\021\n\rRESUL"
      "T_FAILED\020\000\022\024\n\020RESULT_PROCESSED\020\001\"\237\001\n\023sys"
      "tem_notification\022\037\n\006header\030\001 \002(\0132\017.messa"
      "ge_header\0220\n\006status\030\002 \002(\0162 .system_notif"
      "ication.status_type\022\017\n\007message\030\003 \002(\t\"$\n\013"
      "status_type\022\t\n\005ERROR\020\001\022\n\n\006UPDATE\020\002\"\273\001\n\013p"
      "ython_info\022\024\n\014build_number\030\001 \002(\t\022\022\n\nbuil"
      "d_date\030\002 \002(\t\022\020\n\010compiler\030\003 \002(\t\022\016\n\006branch"
      "\030\004 \002(\t\022\026\n\016implementation\030\005 \002(\t\022\020\n\010revisi"
      "on\030\006 \002(\t\022\017\n\007version\030\007 \002(\t\022\023\n\013exec_prefix"
      "\030\010 \002(\t\022\020\n\010is_conda\030\n \002(\010\"\252\001\n\thost_info\022\017"
      "\n\007machine\030\001 \002(\t\022\014\n\004node\030\002 \002(\t\022\020\n\010platfor"
      "m\030\003 \002(\t\022\021\n\tprocessor\030\004 \002(\t\022\017\n\007release\030\005 "
      "\002(\t\022\016\n\006system\030\006 \002(\t\022\017\n\007version\030\007 \002(\t\022\024\n\014"
      "sys_platform\030\010 \002(\t\022\021\n\tbyteorder\030\t \002(\t\"|\n"
      "\rplatform_info\022\037\n\006header\030\001 \002(\0132\017.message"
      "_header\022\034\n\006python\030\002 \002(\0132\014.python_info\022\030\n"
      "\004host\030\003 \002(\0132\n.host_info\022\022\n\nstart_time\030\004 "
      "\002(\002\"K\n\024register_for_message\022\037\n\006header\030\001 "
      "\002(\0132\017.message_header\022\022\n\nmessage_id\030\002 \002(\t"
      "\"M\n\026deregister_for_message\022\037\n\006header\030\001 \002"
      "(\0132\017.message_header\022\022\n\nmessage_id\030\002 \002(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1799);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "aibsmw_messages.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_aibsmw_5fmessages_2eproto
const ::google::protobuf::EnumDescriptor* remote_service_request_COMMAND_TYPES_descriptor() {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_aibsmw_5fmessages_2eproto::file_level_enum_descriptors[0];
}
bool remote_service_request_COMMAND_TYPES_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const remote_service_request_COMMAND_TYPES remote_service_request::CMD_RUN;
const remote_service_request_COMMAND_TYPES remote_service_request::CMD_SET;
const remote_service_request_COMMAND_TYPES remote_service_request::CMD_GET;
const remote_service_request_COMMAND_TYPES remote_service_request::CMD_CALLABLE;
const remote_service_request_COMMAND_TYPES remote_service_request::CMD_PLATFORM_INFO;
const remote_service_request_COMMAND_TYPES remote_service_request::COMMAND_TYPES_MIN;
const remote_service_request_COMMAND_TYPES remote_service_request::COMMAND_TYPES_MAX;
const int remote_service_request::COMMAND_TYPES_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* remote_service_reply_CALL_RESULT_TYPES_descriptor() {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_aibsmw_5fmessages_2eproto::file_level_enum_descriptors[1];
}
bool remote_service_reply_CALL_RESULT_TYPES_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const remote_service_reply_CALL_RESULT_TYPES remote_service_reply::RESULT_FAILED;
const remote_service_reply_CALL_RESULT_TYPES remote_service_reply::RESULT_PROCESSED;
const remote_service_reply_CALL_RESULT_TYPES remote_service_reply::CALL_RESULT_TYPES_MIN;
const remote_service_reply_CALL_RESULT_TYPES remote_service_reply::CALL_RESULT_TYPES_MAX;
const int remote_service_reply::CALL_RESULT_TYPES_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* system_notification_status_type_descriptor() {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_aibsmw_5fmessages_2eproto::file_level_enum_descriptors[2];
}
bool system_notification_status_type_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

/*
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const system_notification_status_type system_notification::ERROR;
const system_notification_status_type system_notification::UPDATE;
const system_notification_status_type system_notification::status_type_MIN;
const system_notification_status_type system_notification::status_type_MAX;
const int system_notification::status_type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
*/

// ===================================================================

void message_header::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_header::kProcessFieldNumber;
const int message_header::kHostFieldNumber;
const int message_header::kTimestampFieldNumber;
const int message_header::kMessageIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_header::message_header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message_header)
}
message_header::message_header(const message_header& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  process_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_process()) {
    process_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.process_);
  }
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message_id()) {
    message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_id_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:message_header)
}

void message_header::SharedCtor() {
  _cached_size_ = 0;
  process_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = 0;
}

message_header::~message_header() {
  // @@protoc_insertion_point(destructor:message_header)
  SharedDtor();
}

void message_header::SharedDtor() {
  process_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void message_header::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* message_header::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const message_header& message_header::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  return *internal_default_instance();
}

message_header* message_header::New(::google::protobuf::Arena* arena) const {
  message_header* n = new message_header;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void message_header::Clear() {
// @@protoc_insertion_point(message_clear_start:message_header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!process_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*process_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!host_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*host_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!message_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*message_id_.UnsafeRawStringPointer())->clear();
    }
  }
  timestamp_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool message_header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message_header)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string process = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_process()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->process().data(), static_cast<int>(this->process().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message_header.process");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string host = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message_header.host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string message_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message_id().data(), static_cast<int>(this->message_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message_header.message_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message_header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message_header)
  return false;
#undef DO_
}

void message_header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message_header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string process = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->process().data(), static_cast<int>(this->process().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_header.process");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->process(), output);
  }

  // required string host = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_header.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host(), output);
  }

  // required float timestamp = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->timestamp(), output);
  }

  // required string message_id = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_id().data(), static_cast<int>(this->message_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_header.message_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->message_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message_header)
}

::google::protobuf::uint8* message_header::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message_header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string process = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->process().data(), static_cast<int>(this->process().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_header.process");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->process(), target);
  }

  // required string host = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_header.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host(), target);
  }

  // required float timestamp = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->timestamp(), target);
  }

  // required string message_id = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_id().data(), static_cast<int>(this->message_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_header.message_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->message_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message_header)
  return target;
}

size_t message_header::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:message_header)
  size_t total_size = 0;

  if (has_process()) {
    // required string process = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->process());
  }

  if (has_host()) {
    // required string host = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  if (has_message_id()) {
    // required string message_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_id());
  }

  if (has_timestamp()) {
    // required float timestamp = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t message_header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message_header)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string process = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->process());

    // required string host = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());

    // required string message_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_id());

    // required float timestamp = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void message_header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message_header)
  GOOGLE_DCHECK_NE(&from, this);
  const message_header* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message_header>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message_header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message_header)
    MergeFrom(*source);
  }
}

void message_header::MergeFrom(const message_header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message_header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_process();
      process_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.process_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_host();
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_message_id();
      message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_id_);
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void message_header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message_header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message_header::CopyFrom(const message_header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message_header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message_header::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void message_header::Swap(message_header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message_header::InternalSwap(message_header* other) {
  using std::swap;
  process_.Swap(&other->process_);
  host_.Swap(&other->host_);
  message_id_.Swap(&other->message_id_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata message_header::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void generic_heartbeat::InitAsDefaultInstance() {
  ::_generic_heartbeat_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int generic_heartbeat::kHeaderFieldNumber;
const int generic_heartbeat::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

generic_heartbeat::generic_heartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsgeneric_heartbeat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:generic_heartbeat)
}
generic_heartbeat::generic_heartbeat(const generic_heartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  start_time_ = from.start_time_;
  // @@protoc_insertion_point(copy_constructor:generic_heartbeat)
}

void generic_heartbeat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_time_) -
      reinterpret_cast<char*>(&header_)) + sizeof(start_time_));
}

generic_heartbeat::~generic_heartbeat() {
  // @@protoc_insertion_point(destructor:generic_heartbeat)
  SharedDtor();
}

void generic_heartbeat::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void generic_heartbeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* generic_heartbeat::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const generic_heartbeat& generic_heartbeat::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsgeneric_heartbeat();
  return *internal_default_instance();
}

generic_heartbeat* generic_heartbeat::New(::google::protobuf::Arena* arena) const {
  generic_heartbeat* n = new generic_heartbeat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void generic_heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:generic_heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(header_ != NULL);
    header_->Clear();
  }
  start_time_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool generic_heartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:generic_heartbeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:generic_heartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:generic_heartbeat)
  return false;
#undef DO_
}

void generic_heartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:generic_heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required float start_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->start_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:generic_heartbeat)
}

::google::protobuf::uint8* generic_heartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:generic_heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required float start_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->start_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generic_heartbeat)
  return target;
}

size_t generic_heartbeat::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:generic_heartbeat)
  size_t total_size = 0;

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  if (has_start_time()) {
    // required float start_time = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t generic_heartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generic_heartbeat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

    // required float start_time = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void generic_heartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generic_heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const generic_heartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const generic_heartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generic_heartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generic_heartbeat)
    MergeFrom(*source);
  }
}

void generic_heartbeat::MergeFrom(const generic_heartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generic_heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000002u) {
      start_time_ = from.start_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void generic_heartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generic_heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void generic_heartbeat::CopyFrom(const generic_heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generic_heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool generic_heartbeat::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void generic_heartbeat::Swap(generic_heartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void generic_heartbeat::InternalSwap(generic_heartbeat* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(start_time_, other->start_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata generic_heartbeat::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void remote_device_heartbeat::InitAsDefaultInstance() {
  ::_remote_device_heartbeat_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int remote_device_heartbeat::kHeaderFieldNumber;
const int remote_device_heartbeat::kDeviceNameFieldNumber;
const int remote_device_heartbeat::kIpAddressFieldNumber;
const int remote_device_heartbeat::kPortFieldNumber;
const int remote_device_heartbeat::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

remote_device_heartbeat::remote_device_heartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsremote_device_heartbeat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:remote_device_heartbeat)
}
remote_device_heartbeat::remote_device_heartbeat(const remote_device_heartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_name()) {
    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip_address()) {
    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&start_time_) -
    reinterpret_cast<char*>(&port_)) + sizeof(start_time_));
  // @@protoc_insertion_point(copy_constructor:remote_device_heartbeat)
}

void remote_device_heartbeat::SharedCtor() {
  _cached_size_ = 0;
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_time_) -
      reinterpret_cast<char*>(&header_)) + sizeof(start_time_));
}

remote_device_heartbeat::~remote_device_heartbeat() {
  // @@protoc_insertion_point(destructor:remote_device_heartbeat)
  SharedDtor();
}

void remote_device_heartbeat::SharedDtor() {
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void remote_device_heartbeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* remote_device_heartbeat::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const remote_device_heartbeat& remote_device_heartbeat::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsremote_device_heartbeat();
  return *internal_default_instance();
}

remote_device_heartbeat* remote_device_heartbeat::New(::google::protobuf::Arena* arena) const {
  remote_device_heartbeat* n = new remote_device_heartbeat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void remote_device_heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:remote_device_heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!device_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*device_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!ip_address_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ip_address_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&port_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&start_time_) -
        reinterpret_cast<char*>(&port_)) + sizeof(start_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool remote_device_heartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:remote_device_heartbeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string device_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_name().data(), static_cast<int>(this->device_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "remote_device_heartbeat.device_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string ip_address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip_address().data(), static_cast<int>(this->ip_address().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "remote_device_heartbeat.ip_address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float start_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:remote_device_heartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:remote_device_heartbeat)
  return false;
#undef DO_
}

void remote_device_heartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:remote_device_heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required string device_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_device_heartbeat.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->device_name(), output);
  }

  // required string ip_address = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_address().data(), static_cast<int>(this->ip_address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_device_heartbeat.ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ip_address(), output);
  }

  // required int32 port = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->port(), output);
  }

  // required float start_time = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->start_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:remote_device_heartbeat)
}

::google::protobuf::uint8* remote_device_heartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:remote_device_heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required string device_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_device_heartbeat.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->device_name(), target);
  }

  // required string ip_address = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_address().data(), static_cast<int>(this->ip_address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_device_heartbeat.ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ip_address(), target);
  }

  // required int32 port = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->port(), target);
  }

  // required float start_time = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->start_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote_device_heartbeat)
  return target;
}

size_t remote_device_heartbeat::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:remote_device_heartbeat)
  size_t total_size = 0;

  if (has_device_name()) {
    // required string device_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_name());
  }

  if (has_ip_address()) {
    // required string ip_address = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());
  }

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  if (has_port()) {
    // required int32 port = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  if (has_start_time()) {
    // required float start_time = 6;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t remote_device_heartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote_device_heartbeat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string device_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_name());

    // required string ip_address = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());

    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

    // required int32 port = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());

    // required float start_time = 6;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void remote_device_heartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:remote_device_heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const remote_device_heartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const remote_device_heartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:remote_device_heartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:remote_device_heartbeat)
    MergeFrom(*source);
  }
}

void remote_device_heartbeat::MergeFrom(const remote_device_heartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:remote_device_heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_device_name();
      device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_ip_address();
      ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000008u) {
      port_ = from.port_;
    }
    if (cached_has_bits & 0x00000010u) {
      start_time_ = from.start_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void remote_device_heartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:remote_device_heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void remote_device_heartbeat::CopyFrom(const remote_device_heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote_device_heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool remote_device_heartbeat::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void remote_device_heartbeat::Swap(remote_device_heartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void remote_device_heartbeat::InternalSwap(remote_device_heartbeat* other) {
  using std::swap;
  device_name_.Swap(&other->device_name_);
  ip_address_.Swap(&other->ip_address_);
  swap(header_, other->header_);
  swap(port_, other->port_);
  swap(start_time_, other->start_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata remote_device_heartbeat::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void request_remote_devices::InitAsDefaultInstance() {
  ::_request_remote_devices_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int request_remote_devices::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

request_remote_devices::request_remote_devices()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsrequest_remote_devices();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_remote_devices)
}
request_remote_devices::request_remote_devices(const request_remote_devices& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:request_remote_devices)
}

void request_remote_devices::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
}

request_remote_devices::~request_remote_devices() {
  // @@protoc_insertion_point(destructor:request_remote_devices)
  SharedDtor();
}

void request_remote_devices::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void request_remote_devices::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* request_remote_devices::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const request_remote_devices& request_remote_devices::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsrequest_remote_devices();
  return *internal_default_instance();
}

request_remote_devices* request_remote_devices::New(::google::protobuf::Arena* arena) const {
  request_remote_devices* n = new request_remote_devices;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void request_remote_devices::Clear() {
// @@protoc_insertion_point(message_clear_start:request_remote_devices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(header_ != NULL);
    header_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool request_remote_devices::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_remote_devices)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_remote_devices)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_remote_devices)
  return false;
#undef DO_
}

void request_remote_devices::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_remote_devices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_remote_devices)
}

::google::protobuf::uint8* request_remote_devices::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:request_remote_devices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_remote_devices)
  return target;
}

size_t request_remote_devices::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_remote_devices)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .message_header header = 1;
  if (has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void request_remote_devices::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_remote_devices)
  GOOGLE_DCHECK_NE(&from, this);
  const request_remote_devices* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const request_remote_devices>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_remote_devices)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_remote_devices)
    MergeFrom(*source);
  }
}

void request_remote_devices::MergeFrom(const request_remote_devices& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_remote_devices)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::message_header::MergeFrom(from.header());
  }
}

void request_remote_devices::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_remote_devices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void request_remote_devices::CopyFrom(const request_remote_devices& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_remote_devices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool request_remote_devices::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void request_remote_devices::Swap(request_remote_devices* other) {
  if (other == this) return;
  InternalSwap(other);
}
void request_remote_devices::InternalSwap(request_remote_devices* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata request_remote_devices::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void router_alive::InitAsDefaultInstance() {
  ::_router_alive_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int router_alive::kHeaderFieldNumber;
const int router_alive::kRegisteredMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

router_alive::router_alive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsrouter_alive();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:router_alive)
}
router_alive::router_alive(const router_alive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      registered_messages_(from.registered_messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:router_alive)
}

void router_alive::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
}

router_alive::~router_alive() {
  // @@protoc_insertion_point(destructor:router_alive)
  SharedDtor();
}

void router_alive::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void router_alive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* router_alive::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const router_alive& router_alive::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsrouter_alive();
  return *internal_default_instance();
}

router_alive* router_alive::New(::google::protobuf::Arena* arena) const {
  router_alive* n = new router_alive;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void router_alive::Clear() {
// @@protoc_insertion_point(message_clear_start:router_alive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  registered_messages_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(header_ != NULL);
    header_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool router_alive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:router_alive)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string registered_messages = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_registered_messages()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->registered_messages(this->registered_messages_size() - 1).data(),
            static_cast<int>(this->registered_messages(this->registered_messages_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "router_alive.registered_messages");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:router_alive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:router_alive)
  return false;
#undef DO_
}

void router_alive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:router_alive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated string registered_messages = 2;
  for (int i = 0, n = this->registered_messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registered_messages(i).data(), static_cast<int>(this->registered_messages(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "router_alive.registered_messages");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->registered_messages(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:router_alive)
}

::google::protobuf::uint8* router_alive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:router_alive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated string registered_messages = 2;
  for (int i = 0, n = this->registered_messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registered_messages(i).data(), static_cast<int>(this->registered_messages(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "router_alive.registered_messages");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->registered_messages(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:router_alive)
  return target;
}

size_t router_alive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:router_alive)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .message_header header = 1;
  if (has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }
  // repeated string registered_messages = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->registered_messages_size());
  for (int i = 0, n = this->registered_messages_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->registered_messages(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void router_alive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:router_alive)
  GOOGLE_DCHECK_NE(&from, this);
  const router_alive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const router_alive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:router_alive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:router_alive)
    MergeFrom(*source);
  }
}

void router_alive::MergeFrom(const router_alive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:router_alive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  registered_messages_.MergeFrom(from.registered_messages_);
  if (from.has_header()) {
    mutable_header()->::message_header::MergeFrom(from.header());
  }
}

void router_alive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:router_alive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void router_alive::CopyFrom(const router_alive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:router_alive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool router_alive::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void router_alive::Swap(router_alive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void router_alive::InternalSwap(router_alive* other) {
  using std::swap;
  registered_messages_.InternalSwap(&other->registered_messages_);
  swap(header_, other->header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata router_alive::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void remote_devices_list::InitAsDefaultInstance() {
  ::_remote_devices_list_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int remote_devices_list::kHeaderFieldNumber;
const int remote_devices_list::kDevicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

remote_devices_list::remote_devices_list()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsremote_devices_list();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:remote_devices_list)
}
remote_devices_list::remote_devices_list(const remote_devices_list& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devices()) {
    devices_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devices_);
  }
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:remote_devices_list)
}

void remote_devices_list::SharedCtor() {
  _cached_size_ = 0;
  devices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
}

remote_devices_list::~remote_devices_list() {
  // @@protoc_insertion_point(destructor:remote_devices_list)
  SharedDtor();
}

void remote_devices_list::SharedDtor() {
  devices_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void remote_devices_list::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* remote_devices_list::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const remote_devices_list& remote_devices_list::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsremote_devices_list();
  return *internal_default_instance();
}

remote_devices_list* remote_devices_list::New(::google::protobuf::Arena* arena) const {
  remote_devices_list* n = new remote_devices_list;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void remote_devices_list::Clear() {
// @@protoc_insertion_point(message_clear_start:remote_devices_list)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!devices_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*devices_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool remote_devices_list::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:remote_devices_list)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string devices = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devices()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->devices().data(), static_cast<int>(this->devices().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "remote_devices_list.devices");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:remote_devices_list)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:remote_devices_list)
  return false;
#undef DO_
}

void remote_devices_list::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:remote_devices_list)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required string devices = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devices().data(), static_cast<int>(this->devices().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_devices_list.devices");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->devices(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:remote_devices_list)
}

::google::protobuf::uint8* remote_devices_list::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:remote_devices_list)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required string devices = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devices().data(), static_cast<int>(this->devices().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_devices_list.devices");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->devices(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote_devices_list)
  return target;
}

size_t remote_devices_list::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:remote_devices_list)
  size_t total_size = 0;

  if (has_devices()) {
    // required string devices = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devices());
  }

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  return total_size;
}
size_t remote_devices_list::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote_devices_list)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string devices = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devices());

    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void remote_devices_list::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:remote_devices_list)
  GOOGLE_DCHECK_NE(&from, this);
  const remote_devices_list* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const remote_devices_list>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:remote_devices_list)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:remote_devices_list)
    MergeFrom(*source);
  }
}

void remote_devices_list::MergeFrom(const remote_devices_list& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:remote_devices_list)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_devices();
      devices_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devices_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
  }
}

void remote_devices_list::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:remote_devices_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void remote_devices_list::CopyFrom(const remote_devices_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote_devices_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool remote_devices_list::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void remote_devices_list::Swap(remote_devices_list* other) {
  if (other == this) return;
  InternalSwap(other);
}
void remote_devices_list::InternalSwap(remote_devices_list* other) {
  using std::swap;
  devices_.Swap(&other->devices_);
  swap(header_, other->header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata remote_devices_list::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void remote_service_request::InitAsDefaultInstance() {
  ::_remote_service_request_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int remote_service_request::kHeaderFieldNumber;
const int remote_service_request::kCommandTypeFieldNumber;
const int remote_service_request::kTargetFieldNumber;
const int remote_service_request::kArgsFieldNumber;
const int remote_service_request::kKwargsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

remote_service_request::remote_service_request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsremote_service_request();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:remote_service_request)
}
remote_service_request::remote_service_request(const remote_service_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_target()) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  args_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_args()) {
    args_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.args_);
  }
  kwargs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_kwargs()) {
    kwargs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kwargs_);
  }
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  command_type_ = from.command_type_;
  // @@protoc_insertion_point(copy_constructor:remote_service_request)
}

void remote_service_request::SharedCtor() {
  _cached_size_ = 0;
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kwargs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&command_type_) -
      reinterpret_cast<char*>(&header_)) + sizeof(command_type_));
}

remote_service_request::~remote_service_request() {
  // @@protoc_insertion_point(destructor:remote_service_request)
  SharedDtor();
}

void remote_service_request::SharedDtor() {
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kwargs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void remote_service_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* remote_service_request::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const remote_service_request& remote_service_request::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsremote_service_request();
  return *internal_default_instance();
}

remote_service_request* remote_service_request::New(::google::protobuf::Arena* arena) const {
  remote_service_request* n = new remote_service_request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void remote_service_request::Clear() {
// @@protoc_insertion_point(message_clear_start:remote_service_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!target_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*target_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!args_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*args_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!kwargs_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*kwargs_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
  }
  command_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool remote_service_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:remote_service_request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .remote_service_request.COMMAND_TYPES command_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::remote_service_request_COMMAND_TYPES_IsValid(value)) {
            set_command_type(static_cast< ::remote_service_request_COMMAND_TYPES >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->target().data(), static_cast<int>(this->target().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "remote_service_request.target");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string args = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_args()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->args().data(), static_cast<int>(this->args().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "remote_service_request.args");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string kwargs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kwargs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->kwargs().data(), static_cast<int>(this->kwargs().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "remote_service_request.kwargs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:remote_service_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:remote_service_request)
  return false;
#undef DO_
}

void remote_service_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:remote_service_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required .remote_service_request.COMMAND_TYPES command_type = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->command_type(), output);
  }

  // required string target = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_service_request.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->target(), output);
  }

  // optional string args = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->args().data(), static_cast<int>(this->args().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_service_request.args");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->args(), output);
  }

  // optional string kwargs = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->kwargs().data(), static_cast<int>(this->kwargs().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_service_request.kwargs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->kwargs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:remote_service_request)
}

::google::protobuf::uint8* remote_service_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:remote_service_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required .remote_service_request.COMMAND_TYPES command_type = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->command_type(), target);
  }

  // required string target = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_service_request.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->target(), target);
  }

  // optional string args = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->args().data(), static_cast<int>(this->args().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_service_request.args");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->args(), target);
  }

  // optional string kwargs = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->kwargs().data(), static_cast<int>(this->kwargs().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_service_request.kwargs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->kwargs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote_service_request)
  return target;
}

size_t remote_service_request::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:remote_service_request)
  size_t total_size = 0;

  if (has_target()) {
    // required string target = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());
  }

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  if (has_command_type()) {
    // required .remote_service_request.COMMAND_TYPES command_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command_type());
  }

  return total_size;
}
size_t remote_service_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote_service_request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000019) ^ 0x00000019) == 0) {  // All required fields are present.
    // required string target = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());

    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

    // required .remote_service_request.COMMAND_TYPES command_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string args = 4;
    if (has_args()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->args());
    }

    // optional string kwargs = 5;
    if (has_kwargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->kwargs());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void remote_service_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:remote_service_request)
  GOOGLE_DCHECK_NE(&from, this);
  const remote_service_request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const remote_service_request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:remote_service_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:remote_service_request)
    MergeFrom(*source);
  }
}

void remote_service_request::MergeFrom(const remote_service_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:remote_service_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_target();
      target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_args();
      args_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.args_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_kwargs();
      kwargs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kwargs_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000010u) {
      command_type_ = from.command_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void remote_service_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:remote_service_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void remote_service_request::CopyFrom(const remote_service_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote_service_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool remote_service_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000019) != 0x00000019) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void remote_service_request::Swap(remote_service_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void remote_service_request::InternalSwap(remote_service_request* other) {
  using std::swap;
  target_.Swap(&other->target_);
  args_.Swap(&other->args_);
  kwargs_.Swap(&other->kwargs_);
  swap(header_, other->header_);
  swap(command_type_, other->command_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata remote_service_request::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void remote_service_reply::InitAsDefaultInstance() {
  ::_remote_service_reply_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int remote_service_reply::kHeaderFieldNumber;
const int remote_service_reply::kCallResultFieldNumber;
const int remote_service_reply::kReplyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

remote_service_reply::remote_service_reply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsremote_service_reply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:remote_service_reply)
}
remote_service_reply::remote_service_reply(const remote_service_reply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reply()) {
    reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reply_);
  }
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  call_result_ = from.call_result_;
  // @@protoc_insertion_point(copy_constructor:remote_service_reply)
}

void remote_service_reply::SharedCtor() {
  _cached_size_ = 0;
  reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&call_result_) -
      reinterpret_cast<char*>(&header_)) + sizeof(call_result_));
}

remote_service_reply::~remote_service_reply() {
  // @@protoc_insertion_point(destructor:remote_service_reply)
  SharedDtor();
}

void remote_service_reply::SharedDtor() {
  reply_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void remote_service_reply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* remote_service_reply::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const remote_service_reply& remote_service_reply::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsremote_service_reply();
  return *internal_default_instance();
}

remote_service_reply* remote_service_reply::New(::google::protobuf::Arena* arena) const {
  remote_service_reply* n = new remote_service_reply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void remote_service_reply::Clear() {
// @@protoc_insertion_point(message_clear_start:remote_service_reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!reply_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*reply_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
  }
  call_result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool remote_service_reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:remote_service_reply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .remote_service_reply.CALL_RESULT_TYPES call_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::remote_service_reply_CALL_RESULT_TYPES_IsValid(value)) {
            set_call_result(static_cast< ::remote_service_reply_CALL_RESULT_TYPES >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string reply = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reply()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reply().data(), static_cast<int>(this->reply().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "remote_service_reply.reply");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:remote_service_reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:remote_service_reply)
  return false;
#undef DO_
}

void remote_service_reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:remote_service_reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required .remote_service_reply.CALL_RESULT_TYPES call_result = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->call_result(), output);
  }

  // required string reply = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reply().data(), static_cast<int>(this->reply().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_service_reply.reply");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reply(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:remote_service_reply)
}

::google::protobuf::uint8* remote_service_reply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:remote_service_reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required .remote_service_reply.CALL_RESULT_TYPES call_result = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->call_result(), target);
  }

  // required string reply = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reply().data(), static_cast<int>(this->reply().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "remote_service_reply.reply");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reply(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote_service_reply)
  return target;
}

size_t remote_service_reply::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:remote_service_reply)
  size_t total_size = 0;

  if (has_reply()) {
    // required string reply = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reply());
  }

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  if (has_call_result()) {
    // required .remote_service_reply.CALL_RESULT_TYPES call_result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_result());
  }

  return total_size;
}
size_t remote_service_reply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote_service_reply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string reply = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reply());

    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

    // required .remote_service_reply.CALL_RESULT_TYPES call_result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_result());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void remote_service_reply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:remote_service_reply)
  GOOGLE_DCHECK_NE(&from, this);
  const remote_service_reply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const remote_service_reply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:remote_service_reply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:remote_service_reply)
    MergeFrom(*source);
  }
}

void remote_service_reply::MergeFrom(const remote_service_reply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:remote_service_reply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_reply();
      reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reply_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000004u) {
      call_result_ = from.call_result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void remote_service_reply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:remote_service_reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void remote_service_reply::CopyFrom(const remote_service_reply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote_service_reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool remote_service_reply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void remote_service_reply::Swap(remote_service_reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void remote_service_reply::InternalSwap(remote_service_reply* other) {
  using std::swap;
  reply_.Swap(&other->reply_);
  swap(header_, other->header_);
  swap(call_result_, other->call_result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata remote_service_reply::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void system_notification::InitAsDefaultInstance() {
  ::_system_notification_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int system_notification::kHeaderFieldNumber;
const int system_notification::kStatusFieldNumber;
const int system_notification::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

system_notification::system_notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultssystem_notification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:system_notification)
}
system_notification::system_notification(const system_notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:system_notification)
}

void system_notification::SharedCtor() {
  _cached_size_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
  status_ = 1;
}

system_notification::~system_notification() {
  // @@protoc_insertion_point(destructor:system_notification)
  SharedDtor();
}

void system_notification::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void system_notification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* system_notification::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const system_notification& system_notification::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultssystem_notification();
  return *internal_default_instance();
}

system_notification* system_notification::New(::google::protobuf::Arena* arena) const {
  system_notification* n = new system_notification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void system_notification::Clear() {
// @@protoc_insertion_point(message_clear_start:system_notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*message_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
    status_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool system_notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:system_notification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .system_notification.status_type status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::system_notification_status_type_IsValid(value)) {
            set_status(static_cast< ::system_notification_status_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "system_notification.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:system_notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:system_notification)
  return false;
#undef DO_
}

void system_notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:system_notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required .system_notification.status_type status = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // required string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "system_notification.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:system_notification)
}

::google::protobuf::uint8* system_notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:system_notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required .system_notification.status_type status = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // required string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "system_notification.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:system_notification)
  return target;
}

size_t system_notification::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:system_notification)
  size_t total_size = 0;

  if (has_message()) {
    // required string message = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  if (has_status()) {
    // required .system_notification.status_type status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  return total_size;
}
size_t system_notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:system_notification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string message = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());

    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

    // required .system_notification.status_type status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void system_notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:system_notification)
  GOOGLE_DCHECK_NE(&from, this);
  const system_notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const system_notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:system_notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:system_notification)
    MergeFrom(*source);
  }
}

void system_notification::MergeFrom(const system_notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:system_notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void system_notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:system_notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void system_notification::CopyFrom(const system_notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:system_notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool system_notification::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void system_notification::Swap(system_notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void system_notification::InternalSwap(system_notification* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(header_, other->header_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata system_notification::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void python_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int python_info::kBuildNumberFieldNumber;
const int python_info::kBuildDateFieldNumber;
const int python_info::kCompilerFieldNumber;
const int python_info::kBranchFieldNumber;
const int python_info::kImplementationFieldNumber;
const int python_info::kRevisionFieldNumber;
const int python_info::kVersionFieldNumber;
const int python_info::kExecPrefixFieldNumber;
const int python_info::kIsCondaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

python_info::python_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultspython_info();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:python_info)
}
python_info::python_info(const python_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  build_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_build_number()) {
    build_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_number_);
  }
  build_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_build_date()) {
    build_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_date_);
  }
  compiler_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_compiler()) {
    compiler_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compiler_);
  }
  branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_branch()) {
    branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_);
  }
  implementation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_implementation()) {
    implementation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.implementation_);
  }
  revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_revision()) {
    revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revision_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  exec_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_exec_prefix()) {
    exec_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exec_prefix_);
  }
  is_conda_ = from.is_conda_;
  // @@protoc_insertion_point(copy_constructor:python_info)
}

void python_info::SharedCtor() {
  _cached_size_ = 0;
  build_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  implementation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exec_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_conda_ = false;
}

python_info::~python_info() {
  // @@protoc_insertion_point(destructor:python_info)
  SharedDtor();
}

void python_info::SharedDtor() {
  build_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  implementation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exec_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void python_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* python_info::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const python_info& python_info::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultspython_info();
  return *internal_default_instance();
}

python_info* python_info::New(::google::protobuf::Arena* arena) const {
  python_info* n = new python_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void python_info::Clear() {
// @@protoc_insertion_point(message_clear_start:python_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!build_number_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*build_number_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!build_date_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*build_date_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!compiler_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*compiler_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!branch_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*branch_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!implementation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*implementation_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!revision_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*revision_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*version_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!exec_prefix_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*exec_prefix_.UnsafeRawStringPointer())->clear();
    }
  }
  is_conda_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool python_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:python_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string build_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->build_number().data(), static_cast<int>(this->build_number().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "python_info.build_number");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string build_date = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->build_date().data(), static_cast<int>(this->build_date().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "python_info.build_date");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string compiler = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compiler()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->compiler().data(), static_cast<int>(this->compiler().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "python_info.compiler");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string branch = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->branch().data(), static_cast<int>(this->branch().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "python_info.branch");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string implementation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_implementation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->implementation().data(), static_cast<int>(this->implementation().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "python_info.implementation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string revision = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revision()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->revision().data(), static_cast<int>(this->revision().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "python_info.revision");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string version = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "python_info.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string exec_prefix = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exec_prefix()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->exec_prefix().data(), static_cast<int>(this->exec_prefix().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "python_info.exec_prefix");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_conda = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_is_conda();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_conda_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:python_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:python_info)
  return false;
#undef DO_
}

void python_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:python_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string build_number = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->build_number().data(), static_cast<int>(this->build_number().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.build_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->build_number(), output);
  }

  // required string build_date = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->build_date().data(), static_cast<int>(this->build_date().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.build_date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->build_date(), output);
  }

  // required string compiler = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compiler().data(), static_cast<int>(this->compiler().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.compiler");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->compiler(), output);
  }

  // required string branch = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->branch().data(), static_cast<int>(this->branch().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.branch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->branch(), output);
  }

  // required string implementation = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->implementation().data(), static_cast<int>(this->implementation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.implementation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->implementation(), output);
  }

  // required string revision = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revision().data(), static_cast<int>(this->revision().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.revision");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->revision(), output);
  }

  // required string version = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->version(), output);
  }

  // required string exec_prefix = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->exec_prefix().data(), static_cast<int>(this->exec_prefix().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.exec_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->exec_prefix(), output);
  }

  // required bool is_conda = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_conda(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:python_info)
}

::google::protobuf::uint8* python_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:python_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string build_number = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->build_number().data(), static_cast<int>(this->build_number().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.build_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->build_number(), target);
  }

  // required string build_date = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->build_date().data(), static_cast<int>(this->build_date().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.build_date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->build_date(), target);
  }

  // required string compiler = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compiler().data(), static_cast<int>(this->compiler().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.compiler");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->compiler(), target);
  }

  // required string branch = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->branch().data(), static_cast<int>(this->branch().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.branch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->branch(), target);
  }

  // required string implementation = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->implementation().data(), static_cast<int>(this->implementation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.implementation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->implementation(), target);
  }

  // required string revision = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revision().data(), static_cast<int>(this->revision().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.revision");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->revision(), target);
  }

  // required string version = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->version(), target);
  }

  // required string exec_prefix = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->exec_prefix().data(), static_cast<int>(this->exec_prefix().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "python_info.exec_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->exec_prefix(), target);
  }

  // required bool is_conda = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_conda(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:python_info)
  return target;
}

size_t python_info::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:python_info)
  size_t total_size = 0;

  if (has_build_number()) {
    // required string build_number = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_number());
  }

  if (has_build_date()) {
    // required string build_date = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_date());
  }

  if (has_compiler()) {
    // required string compiler = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->compiler());
  }

  if (has_branch()) {
    // required string branch = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->branch());
  }

  if (has_implementation()) {
    // required string implementation = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->implementation());
  }

  if (has_revision()) {
    // required string revision = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->revision());
  }

  if (has_version()) {
    // required string version = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  if (has_exec_prefix()) {
    // required string exec_prefix = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exec_prefix());
  }

  if (has_is_conda()) {
    // required bool is_conda = 10;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t python_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:python_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required string build_number = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_number());

    // required string build_date = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_date());

    // required string compiler = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->compiler());

    // required string branch = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->branch());

    // required string implementation = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->implementation());

    // required string revision = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->revision());

    // required string version = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());

    // required string exec_prefix = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exec_prefix());

    // required bool is_conda = 10;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void python_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:python_info)
  GOOGLE_DCHECK_NE(&from, this);
  const python_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const python_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:python_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:python_info)
    MergeFrom(*source);
  }
}

void python_info::MergeFrom(const python_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:python_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_build_number();
      build_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_number_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_build_date();
      build_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_date_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_compiler();
      compiler_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compiler_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_branch();
      branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_implementation();
      implementation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.implementation_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_revision();
      revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revision_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_exec_prefix();
      exec_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exec_prefix_);
    }
  }
  if (cached_has_bits & 0x00000100u) {
    set_is_conda(from.is_conda());
  }
}

void python_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:python_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void python_info::CopyFrom(const python_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:python_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool python_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;
  return true;
}

void python_info::Swap(python_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void python_info::InternalSwap(python_info* other) {
  using std::swap;
  build_number_.Swap(&other->build_number_);
  build_date_.Swap(&other->build_date_);
  compiler_.Swap(&other->compiler_);
  branch_.Swap(&other->branch_);
  implementation_.Swap(&other->implementation_);
  revision_.Swap(&other->revision_);
  version_.Swap(&other->version_);
  exec_prefix_.Swap(&other->exec_prefix_);
  swap(is_conda_, other->is_conda_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata python_info::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void host_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int host_info::kMachineFieldNumber;
const int host_info::kNodeFieldNumber;
const int host_info::kPlatformFieldNumber;
const int host_info::kProcessorFieldNumber;
const int host_info::kReleaseFieldNumber;
const int host_info::kSystemFieldNumber;
const int host_info::kVersionFieldNumber;
const int host_info::kSysPlatformFieldNumber;
const int host_info::kByteorderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

host_info::host_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultshost_info();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:host_info)
}
host_info::host_info(const host_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  machine_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine()) {
    machine_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_);
  }
  node_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_node()) {
    node_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_);
  }
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platform()) {
    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  processor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_processor()) {
    processor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.processor_);
  }
  release_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_release()) {
    release_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.release_);
  }
  system_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_system()) {
    system_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  sys_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sys_platform()) {
    sys_platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sys_platform_);
  }
  byteorder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_byteorder()) {
    byteorder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.byteorder_);
  }
  // @@protoc_insertion_point(copy_constructor:host_info)
}

void host_info::SharedCtor() {
  _cached_size_ = 0;
  machine_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  processor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sys_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  byteorder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

host_info::~host_info() {
  // @@protoc_insertion_point(destructor:host_info)
  SharedDtor();
}

void host_info::SharedDtor() {
  machine_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  processor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sys_platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  byteorder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void host_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* host_info::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const host_info& host_info::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultshost_info();
  return *internal_default_instance();
}

host_info* host_info::New(::google::protobuf::Arena* arena) const {
  host_info* n = new host_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void host_info::Clear() {
// @@protoc_insertion_point(message_clear_start:host_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!machine_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*machine_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!node_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*node_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!platform_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*platform_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!processor_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*processor_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!release_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*release_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!system_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*system_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*version_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!sys_platform_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sys_platform_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(!byteorder_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*byteorder_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool host_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:host_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string machine = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine().data(), static_cast<int>(this->machine().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "host_info.machine");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string node = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->node().data(), static_cast<int>(this->node().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "host_info.node");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string platform = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platform().data(), static_cast<int>(this->platform().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "host_info.platform");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string processor = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_processor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->processor().data(), static_cast<int>(this->processor().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "host_info.processor");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string release = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_release()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->release().data(), static_cast<int>(this->release().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "host_info.release");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string system = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_system()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->system().data(), static_cast<int>(this->system().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "host_info.system");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string version = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "host_info.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string sys_platform = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sys_platform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sys_platform().data(), static_cast<int>(this->sys_platform().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "host_info.sys_platform");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string byteorder = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_byteorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->byteorder().data(), static_cast<int>(this->byteorder().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "host_info.byteorder");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:host_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:host_info)
  return false;
#undef DO_
}

void host_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:host_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string machine = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine().data(), static_cast<int>(this->machine().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.machine");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->machine(), output);
  }

  // required string node = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node().data(), static_cast<int>(this->node().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.node");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->node(), output);
  }

  // required string platform = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->platform(), output);
  }

  // required string processor = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->processor().data(), static_cast<int>(this->processor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.processor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->processor(), output);
  }

  // required string release = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->release().data(), static_cast<int>(this->release().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.release");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->release(), output);
  }

  // required string system = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->system().data(), static_cast<int>(this->system().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.system");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->system(), output);
  }

  // required string version = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->version(), output);
  }

  // required string sys_platform = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sys_platform().data(), static_cast<int>(this->sys_platform().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.sys_platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->sys_platform(), output);
  }

  // required string byteorder = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->byteorder().data(), static_cast<int>(this->byteorder().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.byteorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->byteorder(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:host_info)
}

::google::protobuf::uint8* host_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:host_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string machine = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine().data(), static_cast<int>(this->machine().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.machine");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->machine(), target);
  }

  // required string node = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node().data(), static_cast<int>(this->node().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.node");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->node(), target);
  }

  // required string platform = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->platform(), target);
  }

  // required string processor = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->processor().data(), static_cast<int>(this->processor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.processor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->processor(), target);
  }

  // required string release = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->release().data(), static_cast<int>(this->release().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.release");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->release(), target);
  }

  // required string system = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->system().data(), static_cast<int>(this->system().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.system");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->system(), target);
  }

  // required string version = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->version(), target);
  }

  // required string sys_platform = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sys_platform().data(), static_cast<int>(this->sys_platform().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.sys_platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->sys_platform(), target);
  }

  // required string byteorder = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->byteorder().data(), static_cast<int>(this->byteorder().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "host_info.byteorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->byteorder(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:host_info)
  return target;
}

size_t host_info::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:host_info)
  size_t total_size = 0;

  if (has_machine()) {
    // required string machine = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine());
  }

  if (has_node()) {
    // required string node = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node());
  }

  if (has_platform()) {
    // required string platform = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());
  }

  if (has_processor()) {
    // required string processor = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->processor());
  }

  if (has_release()) {
    // required string release = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->release());
  }

  if (has_system()) {
    // required string system = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system());
  }

  if (has_version()) {
    // required string version = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  if (has_sys_platform()) {
    // required string sys_platform = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sys_platform());
  }

  if (has_byteorder()) {
    // required string byteorder = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->byteorder());
  }

  return total_size;
}
size_t host_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:host_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required string machine = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine());

    // required string node = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node());

    // required string platform = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());

    // required string processor = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->processor());

    // required string release = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->release());

    // required string system = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system());

    // required string version = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());

    // required string sys_platform = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sys_platform());

    // required string byteorder = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->byteorder());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void host_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:host_info)
  GOOGLE_DCHECK_NE(&from, this);
  const host_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const host_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:host_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:host_info)
    MergeFrom(*source);
  }
}

void host_info::MergeFrom(const host_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:host_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_machine();
      machine_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_node();
      node_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_platform();
      platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_processor();
      processor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.processor_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_release();
      release_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.release_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_system();
      system_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_sys_platform();
      sys_platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sys_platform_);
    }
  }
  if (cached_has_bits & 0x00000100u) {
    set_has_byteorder();
    byteorder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.byteorder_);
  }
}

void host_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:host_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void host_info::CopyFrom(const host_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:host_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool host_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;
  return true;
}

void host_info::Swap(host_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void host_info::InternalSwap(host_info* other) {
  using std::swap;
  machine_.Swap(&other->machine_);
  node_.Swap(&other->node_);
  platform_.Swap(&other->platform_);
  processor_.Swap(&other->processor_);
  release_.Swap(&other->release_);
  system_.Swap(&other->system_);
  version_.Swap(&other->version_);
  sys_platform_.Swap(&other->sys_platform_);
  byteorder_.Swap(&other->byteorder_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata host_info::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void platform_info::InitAsDefaultInstance() {
  ::_platform_info_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
  ::_platform_info_default_instance_._instance.get_mutable()->python_ = const_cast< ::python_info*>(
      ::python_info::internal_default_instance());
  ::_platform_info_default_instance_._instance.get_mutable()->host_ = const_cast< ::host_info*>(
      ::host_info::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int platform_info::kHeaderFieldNumber;
const int platform_info::kPythonFieldNumber;
const int platform_info::kHostFieldNumber;
const int platform_info::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

platform_info::platform_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsplatform_info();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:platform_info)
}
platform_info::platform_info(const platform_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_python()) {
    python_ = new ::python_info(*from.python_);
  } else {
    python_ = NULL;
  }
  if (from.has_host()) {
    host_ = new ::host_info(*from.host_);
  } else {
    host_ = NULL;
  }
  start_time_ = from.start_time_;
  // @@protoc_insertion_point(copy_constructor:platform_info)
}

void platform_info::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_time_) -
      reinterpret_cast<char*>(&header_)) + sizeof(start_time_));
}

platform_info::~platform_info() {
  // @@protoc_insertion_point(destructor:platform_info)
  SharedDtor();
}

void platform_info::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete python_;
  if (this != internal_default_instance()) delete host_;
}

void platform_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* platform_info::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const platform_info& platform_info::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsplatform_info();
  return *internal_default_instance();
}

platform_info* platform_info::New(::google::protobuf::Arena* arena) const {
  platform_info* n = new platform_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void platform_info::Clear() {
// @@protoc_insertion_point(message_clear_start:platform_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(python_ != NULL);
      python_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(host_ != NULL);
      host_->Clear();
    }
  }
  start_time_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool platform_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platform_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .python_info python = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_python()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .host_info host = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float start_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platform_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platform_info)
  return false;
#undef DO_
}

void platform_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platform_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required .python_info python = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->python_, output);
  }

  // required .host_info host = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->host_, output);
  }

  // required float start_time = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->start_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platform_info)
}

::google::protobuf::uint8* platform_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:platform_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required .python_info python = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->python_, deterministic, target);
  }

  // required .host_info host = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->host_, deterministic, target);
  }

  // required float start_time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->start_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platform_info)
  return target;
}

size_t platform_info::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:platform_info)
  size_t total_size = 0;

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  if (has_python()) {
    // required .python_info python = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->python_);
  }

  if (has_host()) {
    // required .host_info host = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->host_);
  }

  if (has_start_time()) {
    // required float start_time = 4;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t platform_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platform_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

    // required .python_info python = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->python_);

    // required .host_info host = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->host_);

    // required float start_time = 4;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void platform_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platform_info)
  GOOGLE_DCHECK_NE(&from, this);
  const platform_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const platform_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platform_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platform_info)
    MergeFrom(*source);
  }
}

void platform_info::MergeFrom(const platform_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platform_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_python()->::python_info::MergeFrom(from.python());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_host()->::host_info::MergeFrom(from.host());
    }
    if (cached_has_bits & 0x00000008u) {
      start_time_ = from.start_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void platform_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platform_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void platform_info::CopyFrom(const platform_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platform_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool platform_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  if (has_python()) {
    if (!this->python_->IsInitialized()) return false;
  }
  if (has_host()) {
    if (!this->host_->IsInitialized()) return false;
  }
  return true;
}

void platform_info::Swap(platform_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void platform_info::InternalSwap(platform_info* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(python_, other->python_);
  swap(host_, other->host_);
  swap(start_time_, other->start_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata platform_info::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void register_for_message::InitAsDefaultInstance() {
  ::_register_for_message_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int register_for_message::kHeaderFieldNumber;
const int register_for_message::kMessageIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

register_for_message::register_for_message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsregister_for_message();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:register_for_message)
}
register_for_message::register_for_message(const register_for_message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message_id()) {
    message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_id_);
  }
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:register_for_message)
}

void register_for_message::SharedCtor() {
  _cached_size_ = 0;
  message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
}

register_for_message::~register_for_message() {
  // @@protoc_insertion_point(destructor:register_for_message)
  SharedDtor();
}

void register_for_message::SharedDtor() {
  message_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void register_for_message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* register_for_message::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const register_for_message& register_for_message::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsregister_for_message();
  return *internal_default_instance();
}

register_for_message* register_for_message::New(::google::protobuf::Arena* arena) const {
  register_for_message* n = new register_for_message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void register_for_message::Clear() {
// @@protoc_insertion_point(message_clear_start:register_for_message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!message_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*message_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool register_for_message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:register_for_message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string message_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message_id().data(), static_cast<int>(this->message_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "register_for_message.message_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:register_for_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:register_for_message)
  return false;
#undef DO_
}

void register_for_message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:register_for_message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required string message_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_id().data(), static_cast<int>(this->message_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "register_for_message.message_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:register_for_message)
}

::google::protobuf::uint8* register_for_message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:register_for_message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required string message_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_id().data(), static_cast<int>(this->message_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "register_for_message.message_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:register_for_message)
  return target;
}

size_t register_for_message::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:register_for_message)
  size_t total_size = 0;

  if (has_message_id()) {
    // required string message_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_id());
  }

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  return total_size;
}
size_t register_for_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:register_for_message)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string message_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_id());

    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void register_for_message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:register_for_message)
  GOOGLE_DCHECK_NE(&from, this);
  const register_for_message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const register_for_message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:register_for_message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:register_for_message)
    MergeFrom(*source);
  }
}

void register_for_message::MergeFrom(const register_for_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:register_for_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message_id();
      message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
  }
}

void register_for_message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:register_for_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void register_for_message::CopyFrom(const register_for_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:register_for_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool register_for_message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void register_for_message::Swap(register_for_message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void register_for_message::InternalSwap(register_for_message* other) {
  using std::swap;
  message_id_.Swap(&other->message_id_);
  swap(header_, other->header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata register_for_message::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void deregister_for_message::InitAsDefaultInstance() {
  ::_deregister_for_message_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int deregister_for_message::kHeaderFieldNumber;
const int deregister_for_message::kMessageIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

deregister_for_message::deregister_for_message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsderegister_for_message();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:deregister_for_message)
}
deregister_for_message::deregister_for_message(const deregister_for_message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message_id()) {
    message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_id_);
  }
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:deregister_for_message)
}

void deregister_for_message::SharedCtor() {
  _cached_size_ = 0;
  message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
}

deregister_for_message::~deregister_for_message() {
  // @@protoc_insertion_point(destructor:deregister_for_message)
  SharedDtor();
}

void deregister_for_message::SharedDtor() {
  message_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void deregister_for_message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* deregister_for_message::descriptor() {
  ::protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const deregister_for_message& deregister_for_message::default_instance() {
  ::protobuf_aibsmw_5fmessages_2eproto::InitDefaultsderegister_for_message();
  return *internal_default_instance();
}

deregister_for_message* deregister_for_message::New(::google::protobuf::Arena* arena) const {
  deregister_for_message* n = new deregister_for_message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void deregister_for_message::Clear() {
// @@protoc_insertion_point(message_clear_start:deregister_for_message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!message_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*message_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool deregister_for_message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deregister_for_message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string message_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message_id().data(), static_cast<int>(this->message_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "deregister_for_message.message_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deregister_for_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deregister_for_message)
  return false;
#undef DO_
}

void deregister_for_message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deregister_for_message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required string message_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_id().data(), static_cast<int>(this->message_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "deregister_for_message.message_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:deregister_for_message)
}

::google::protobuf::uint8* deregister_for_message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deregister_for_message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required string message_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message_id().data(), static_cast<int>(this->message_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "deregister_for_message.message_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:deregister_for_message)
  return target;
}

size_t deregister_for_message::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:deregister_for_message)
  size_t total_size = 0;

  if (has_message_id()) {
    // required string message_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_id());
  }

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  return total_size;
}
size_t deregister_for_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deregister_for_message)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string message_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_id());

    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void deregister_for_message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deregister_for_message)
  GOOGLE_DCHECK_NE(&from, this);
  const deregister_for_message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const deregister_for_message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deregister_for_message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deregister_for_message)
    MergeFrom(*source);
  }
}

void deregister_for_message::MergeFrom(const deregister_for_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deregister_for_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message_id();
      message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
  }
}

void deregister_for_message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deregister_for_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void deregister_for_message::CopyFrom(const deregister_for_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deregister_for_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deregister_for_message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void deregister_for_message::Swap(deregister_for_message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void deregister_for_message::InternalSwap(deregister_for_message* other) {
  using std::swap;
  message_id_.Swap(&other->message_id_);
  swap(header_, other->header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata deregister_for_message::GetMetadata() const {
  protobuf_aibsmw_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_aibsmw_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
