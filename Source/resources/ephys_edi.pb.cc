// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ephys_edi.proto

#include "ephys_edi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class request_system_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<request_system_info>
      _instance;
} _request_system_info_default_instance_;
class system_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<system_info>
      _instance;
} _system_info_default_instance_;
class request_system_statusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<request_system_status>
      _instance;
} _request_system_status_default_instance_;
class system_statusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<system_status>
      _instance;
} _system_status_default_instance_;
class set_data_file_pathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<set_data_file_path>
      _instance;
} _set_data_file_path_default_instance_;
class open_configuration_fileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<open_configuration_file>
      _instance;
} _open_configuration_file_default_instance_;
class acquisitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<acquisition>
      _instance;
} _acquisition_default_instance_;
class recordingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<recording>
      _instance;
} _recording_default_instance_;
namespace protobuf_ephys_5fedi_2eproto {
void InitDefaultsrequest_system_infoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_request_system_info_default_instance_;
    new (ptr) ::request_system_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_system_info::InitAsDefaultInstance();
}

void InitDefaultsrequest_system_info() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsrequest_system_infoImpl);
}

void InitDefaultssystem_infoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_system_info_default_instance_;
    new (ptr) ::system_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::system_info::InitAsDefaultInstance();
}

void InitDefaultssystem_info() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultssystem_infoImpl);
}

void InitDefaultsrequest_system_statusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_request_system_status_default_instance_;
    new (ptr) ::request_system_status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_system_status::InitAsDefaultInstance();
}

void InitDefaultsrequest_system_status() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsrequest_system_statusImpl);
}

void InitDefaultssystem_statusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_system_status_default_instance_;
    new (ptr) ::system_status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::system_status::InitAsDefaultInstance();
}

void InitDefaultssystem_status() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultssystem_statusImpl);
}

void InitDefaultsset_data_file_pathImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_set_data_file_path_default_instance_;
    new (ptr) ::set_data_file_path();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::set_data_file_path::InitAsDefaultInstance();
}

void InitDefaultsset_data_file_path() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsset_data_file_pathImpl);
}

void InitDefaultsopen_configuration_fileImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_open_configuration_file_default_instance_;
    new (ptr) ::open_configuration_file();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_configuration_file::InitAsDefaultInstance();
}

void InitDefaultsopen_configuration_file() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsopen_configuration_fileImpl);
}

void InitDefaultsacquisitionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_acquisition_default_instance_;
    new (ptr) ::acquisition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acquisition::InitAsDefaultInstance();
}

void InitDefaultsacquisition() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsacquisitionImpl);
}

void InitDefaultsrecordingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_aibsmw_5fmessages_2eproto::InitDefaultsmessage_header();
  {
    void* ptr = &::_recording_default_instance_;
    new (ptr) ::recording();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::recording::InitAsDefaultInstance();
}

void InitDefaultsrecording() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsrecordingImpl);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::request_system_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::request_system_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::request_system_info, header_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_info, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_info, software_revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_info, hardware_revision_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::request_system_status, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::request_system_status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::request_system_status, header_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_status, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_status, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_status, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_status, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::system_status, source_message_id_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::set_data_file_path, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::set_data_file_path, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::set_data_file_path, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::set_data_file_path, path_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_configuration_file, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_configuration_file, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_configuration_file, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_configuration_file, path_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acquisition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acquisition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acquisition, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acquisition, command_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::recording, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::recording, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::recording, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::recording, command_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::request_system_info)},
  { 7, 15, sizeof(::system_info)},
  { 18, 24, sizeof(::request_system_status)},
  { 25, 34, sizeof(::system_status)},
  { 38, 45, sizeof(::set_data_file_path)},
  { 47, 54, sizeof(::open_configuration_file)},
  { 56, 63, sizeof(::acquisition)},
  { 65, 72, sizeof(::recording)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_request_system_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_system_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_request_system_status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_system_status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_set_data_file_path_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_open_configuration_file_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_acquisition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_recording_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ephys_edi.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017ephys_edi.proto\032\025aibsmw_messages.proto"
      "\"6\n\023request_system_info\022\037\n\006header\030\001 \002(\0132"
      "\017.message_header\"d\n\013system_info\022\037\n\006heade"
      "r\030\001 \002(\0132\017.message_header\022\031\n\021software_rev"
      "ision\030\002 \002(\t\022\031\n\021hardware_revision\030\003 \002(\t\"8"
      "\n\025request_system_status\022\037\n\006header\030\001 \002(\0132"
      "\017.message_header\"\276\001\n\rsystem_status\022\037\n\006he"
      "ader\030\001 \002(\0132\017.message_header\0221\n\006status\030\002 "
      "\002(\0162\032.system_status.status_type:\005READY\022\017"
      "\n\007message\030\003 \002(\t\022\031\n\021source_message_id\030\004 \002"
      "(\t\"-\n\013status_type\022\t\n\005READY\020\000\022\010\n\004BUSY\020\001\022\t"
      "\n\005ERROR\020\002\"C\n\022set_data_file_path\022\037\n\006heade"
      "r\030\001 \002(\0132\017.message_header\022\014\n\004path\030\002 \002(\t\"H"
      "\n\027open_configuration_file\022\037\n\006header\030\001 \002("
      "\0132\017.message_header\022\014\n\004path\030\002 \002(\t\"\177\n\013acqu"
      "isition\022\037\n\006header\030\001 \002(\0132\017.message_header"
      "\022*\n\007command\030\002 \002(\0162\031.acquisition.command_"
      "type\"#\n\014command_type\022\t\n\005START\020\000\022\010\n\004STOP\020"
      "\001\"{\n\trecording\022\037\n\006header\030\001 \002(\0132\017.message"
      "_header\022(\n\007command\030\002 \002(\0162\027.recording.com"
      "mand_type\"#\n\014command_type\022\t\n\005START\020\000\022\010\n\004"
      "STOP\020\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 846);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ephys_edi.proto", &protobuf_RegisterTypes);
  ::protobuf_aibsmw_5fmessages_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ephys_5fedi_2eproto
const ::google::protobuf::EnumDescriptor* system_status_status_type_descriptor() {
  protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ephys_5fedi_2eproto::file_level_enum_descriptors[0];
}
bool system_status_status_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const system_status_status_type system_status::READY;
const system_status_status_type system_status::BUSY;
const system_status_status_type system_status::ERROR;
const system_status_status_type system_status::status_type_MIN;
const system_status_status_type system_status::status_type_MAX;
const int system_status::status_type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* acquisition_command_type_descriptor() {
  protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ephys_5fedi_2eproto::file_level_enum_descriptors[1];
}
bool acquisition_command_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const acquisition_command_type acquisition::START;
const acquisition_command_type acquisition::STOP;
const acquisition_command_type acquisition::command_type_MIN;
const acquisition_command_type acquisition::command_type_MAX;
const int acquisition::command_type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* recording_command_type_descriptor() {
  protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ephys_5fedi_2eproto::file_level_enum_descriptors[2];
}
bool recording_command_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const recording_command_type recording::START;
const recording_command_type recording::STOP;
const recording_command_type recording::command_type_MIN;
const recording_command_type recording::command_type_MAX;
const int recording::command_type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void request_system_info::InitAsDefaultInstance() {
  ::_request_system_info_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
void request_system_info::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int request_system_info::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

request_system_info::request_system_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ephys_5fedi_2eproto::InitDefaultsrequest_system_info();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_system_info)
}
request_system_info::request_system_info(const request_system_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:request_system_info)
}

void request_system_info::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
}

request_system_info::~request_system_info() {
  // @@protoc_insertion_point(destructor:request_system_info)
  SharedDtor();
}

void request_system_info::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void request_system_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* request_system_info::descriptor() {
  ::protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const request_system_info& request_system_info::default_instance() {
  ::protobuf_ephys_5fedi_2eproto::InitDefaultsrequest_system_info();
  return *internal_default_instance();
}

request_system_info* request_system_info::New(::google::protobuf::Arena* arena) const {
  request_system_info* n = new request_system_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void request_system_info::Clear() {
// @@protoc_insertion_point(message_clear_start:request_system_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(header_ != NULL);
    header_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool request_system_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_system_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_system_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_system_info)
  return false;
#undef DO_
}

void request_system_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_system_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_system_info)
}

::google::protobuf::uint8* request_system_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:request_system_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_system_info)
  return target;
}

size_t request_system_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_system_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .message_header header = 1;
  if (has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void request_system_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_system_info)
  GOOGLE_DCHECK_NE(&from, this);
  const request_system_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const request_system_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_system_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_system_info)
    MergeFrom(*source);
  }
}

void request_system_info::MergeFrom(const request_system_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_system_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::message_header::MergeFrom(from.header());
  }
}

void request_system_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_system_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void request_system_info::CopyFrom(const request_system_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_system_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool request_system_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void request_system_info::Swap(request_system_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void request_system_info::InternalSwap(request_system_info* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata request_system_info::GetMetadata() const {
  protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void system_info::InitAsDefaultInstance() {
  ::_system_info_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
void system_info::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int system_info::kHeaderFieldNumber;
const int system_info::kSoftwareRevisionFieldNumber;
const int system_info::kHardwareRevisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

system_info::system_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ephys_5fedi_2eproto::InitDefaultssystem_info();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:system_info)
}
system_info::system_info(const system_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  software_revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_software_revision()) {
    software_revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.software_revision_);
  }
  hardware_revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hardware_revision()) {
    hardware_revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hardware_revision_);
  }
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:system_info)
}

void system_info::SharedCtor() {
  _cached_size_ = 0;
  software_revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hardware_revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
}

system_info::~system_info() {
  // @@protoc_insertion_point(destructor:system_info)
  SharedDtor();
}

void system_info::SharedDtor() {
  software_revision_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hardware_revision_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void system_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* system_info::descriptor() {
  ::protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const system_info& system_info::default_instance() {
  ::protobuf_ephys_5fedi_2eproto::InitDefaultssystem_info();
  return *internal_default_instance();
}

system_info* system_info::New(::google::protobuf::Arena* arena) const {
  system_info* n = new system_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void system_info::Clear() {
// @@protoc_insertion_point(message_clear_start:system_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!software_revision_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*software_revision_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!hardware_revision_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hardware_revision_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool system_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:system_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string software_revision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_software_revision()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->software_revision().data(), static_cast<int>(this->software_revision().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "system_info.software_revision");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string hardware_revision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hardware_revision()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hardware_revision().data(), static_cast<int>(this->hardware_revision().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "system_info.hardware_revision");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:system_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:system_info)
  return false;
#undef DO_
}

void system_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:system_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required string software_revision = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->software_revision().data(), static_cast<int>(this->software_revision().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "system_info.software_revision");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->software_revision(), output);
  }

  // required string hardware_revision = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hardware_revision().data(), static_cast<int>(this->hardware_revision().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "system_info.hardware_revision");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->hardware_revision(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:system_info)
}

::google::protobuf::uint8* system_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:system_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required string software_revision = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->software_revision().data(), static_cast<int>(this->software_revision().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "system_info.software_revision");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->software_revision(), target);
  }

  // required string hardware_revision = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hardware_revision().data(), static_cast<int>(this->hardware_revision().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "system_info.hardware_revision");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->hardware_revision(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:system_info)
  return target;
}

size_t system_info::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:system_info)
  size_t total_size = 0;

  if (has_software_revision()) {
    // required string software_revision = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->software_revision());
  }

  if (has_hardware_revision()) {
    // required string hardware_revision = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hardware_revision());
  }

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  return total_size;
}
size_t system_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:system_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string software_revision = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->software_revision());

    // required string hardware_revision = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hardware_revision());

    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void system_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:system_info)
  GOOGLE_DCHECK_NE(&from, this);
  const system_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const system_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:system_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:system_info)
    MergeFrom(*source);
  }
}

void system_info::MergeFrom(const system_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:system_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_software_revision();
      software_revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.software_revision_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_hardware_revision();
      hardware_revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hardware_revision_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
  }
}

void system_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:system_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void system_info::CopyFrom(const system_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:system_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool system_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void system_info::Swap(system_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void system_info::InternalSwap(system_info* other) {
  using std::swap;
  software_revision_.Swap(&other->software_revision_);
  hardware_revision_.Swap(&other->hardware_revision_);
  swap(header_, other->header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata system_info::GetMetadata() const {
  protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void request_system_status::InitAsDefaultInstance() {
  ::_request_system_status_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
void request_system_status::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int request_system_status::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

request_system_status::request_system_status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ephys_5fedi_2eproto::InitDefaultsrequest_system_status();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_system_status)
}
request_system_status::request_system_status(const request_system_status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:request_system_status)
}

void request_system_status::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
}

request_system_status::~request_system_status() {
  // @@protoc_insertion_point(destructor:request_system_status)
  SharedDtor();
}

void request_system_status::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void request_system_status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* request_system_status::descriptor() {
  ::protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const request_system_status& request_system_status::default_instance() {
  ::protobuf_ephys_5fedi_2eproto::InitDefaultsrequest_system_status();
  return *internal_default_instance();
}

request_system_status* request_system_status::New(::google::protobuf::Arena* arena) const {
  request_system_status* n = new request_system_status;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void request_system_status::Clear() {
// @@protoc_insertion_point(message_clear_start:request_system_status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(header_ != NULL);
    header_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool request_system_status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_system_status)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_system_status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_system_status)
  return false;
#undef DO_
}

void request_system_status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_system_status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_system_status)
}

::google::protobuf::uint8* request_system_status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:request_system_status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_system_status)
  return target;
}

size_t request_system_status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_system_status)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .message_header header = 1;
  if (has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void request_system_status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_system_status)
  GOOGLE_DCHECK_NE(&from, this);
  const request_system_status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const request_system_status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_system_status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_system_status)
    MergeFrom(*source);
  }
}

void request_system_status::MergeFrom(const request_system_status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_system_status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::message_header::MergeFrom(from.header());
  }
}

void request_system_status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_system_status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void request_system_status::CopyFrom(const request_system_status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_system_status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool request_system_status::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void request_system_status::Swap(request_system_status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void request_system_status::InternalSwap(request_system_status* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata request_system_status::GetMetadata() const {
  protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void system_status::InitAsDefaultInstance() {
  ::_system_status_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
void system_status::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int system_status::kHeaderFieldNumber;
const int system_status::kStatusFieldNumber;
const int system_status::kMessageFieldNumber;
const int system_status::kSourceMessageIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

system_status::system_status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ephys_5fedi_2eproto::InitDefaultssystem_status();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:system_status)
}
system_status::system_status(const system_status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  source_message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_message_id()) {
    source_message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_message_id_);
  }
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:system_status)
}

void system_status::SharedCtor() {
  _cached_size_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&header_)) + sizeof(status_));
}

system_status::~system_status() {
  // @@protoc_insertion_point(destructor:system_status)
  SharedDtor();
}

void system_status::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_message_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void system_status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* system_status::descriptor() {
  ::protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const system_status& system_status::default_instance() {
  ::protobuf_ephys_5fedi_2eproto::InitDefaultssystem_status();
  return *internal_default_instance();
}

system_status* system_status::New(::google::protobuf::Arena* arena) const {
  system_status* n = new system_status;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void system_status::Clear() {
// @@protoc_insertion_point(message_clear_start:system_status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*message_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!source_message_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*source_message_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool system_status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:system_status)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .system_status.status_type status = 2 [default = READY];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::system_status_status_type_IsValid(value)) {
            set_status(static_cast< ::system_status_status_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "system_status.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string source_message_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_message_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_message_id().data(), static_cast<int>(this->source_message_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "system_status.source_message_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:system_status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:system_status)
  return false;
#undef DO_
}

void system_status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:system_status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required .system_status.status_type status = 2 [default = READY];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // required string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "system_status.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // required string source_message_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_message_id().data(), static_cast<int>(this->source_message_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "system_status.source_message_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->source_message_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:system_status)
}

::google::protobuf::uint8* system_status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:system_status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required .system_status.status_type status = 2 [default = READY];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // required string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "system_status.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // required string source_message_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_message_id().data(), static_cast<int>(this->source_message_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "system_status.source_message_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->source_message_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:system_status)
  return target;
}

size_t system_status::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:system_status)
  size_t total_size = 0;

  if (has_message()) {
    // required string message = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  if (has_source_message_id()) {
    // required string source_message_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_message_id());
  }

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  if (has_status()) {
    // required .system_status.status_type status = 2 [default = READY];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  return total_size;
}
size_t system_status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:system_status)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string message = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());

    // required string source_message_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_message_id());

    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

    // required .system_status.status_type status = 2 [default = READY];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void system_status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:system_status)
  GOOGLE_DCHECK_NE(&from, this);
  const system_status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const system_status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:system_status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:system_status)
    MergeFrom(*source);
  }
}

void system_status::MergeFrom(const system_status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:system_status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_source_message_id();
      source_message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_message_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000008u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void system_status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:system_status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void system_status::CopyFrom(const system_status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:system_status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool system_status::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void system_status::Swap(system_status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void system_status::InternalSwap(system_status* other) {
  using std::swap;
  message_.Swap(&other->message_);
  source_message_id_.Swap(&other->source_message_id_);
  swap(header_, other->header_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata system_status::GetMetadata() const {
  protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void set_data_file_path::InitAsDefaultInstance() {
  ::_set_data_file_path_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
void set_data_file_path::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int set_data_file_path::kHeaderFieldNumber;
const int set_data_file_path::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

set_data_file_path::set_data_file_path()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ephys_5fedi_2eproto::InitDefaultsset_data_file_path();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:set_data_file_path)
}
set_data_file_path::set_data_file_path(const set_data_file_path& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:set_data_file_path)
}

void set_data_file_path::SharedCtor() {
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
}

set_data_file_path::~set_data_file_path() {
  // @@protoc_insertion_point(destructor:set_data_file_path)
  SharedDtor();
}

void set_data_file_path::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void set_data_file_path::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* set_data_file_path::descriptor() {
  ::protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const set_data_file_path& set_data_file_path::default_instance() {
  ::protobuf_ephys_5fedi_2eproto::InitDefaultsset_data_file_path();
  return *internal_default_instance();
}

set_data_file_path* set_data_file_path::New(::google::protobuf::Arena* arena) const {
  set_data_file_path* n = new set_data_file_path;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void set_data_file_path::Clear() {
// @@protoc_insertion_point(message_clear_start:set_data_file_path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*path_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool set_data_file_path::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:set_data_file_path)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "set_data_file_path.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:set_data_file_path)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:set_data_file_path)
  return false;
#undef DO_
}

void set_data_file_path::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:set_data_file_path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "set_data_file_path.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:set_data_file_path)
}

::google::protobuf::uint8* set_data_file_path::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:set_data_file_path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "set_data_file_path.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:set_data_file_path)
  return target;
}

size_t set_data_file_path::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:set_data_file_path)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  return total_size;
}
size_t set_data_file_path::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:set_data_file_path)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void set_data_file_path::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:set_data_file_path)
  GOOGLE_DCHECK_NE(&from, this);
  const set_data_file_path* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const set_data_file_path>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:set_data_file_path)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:set_data_file_path)
    MergeFrom(*source);
  }
}

void set_data_file_path::MergeFrom(const set_data_file_path& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:set_data_file_path)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
  }
}

void set_data_file_path::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:set_data_file_path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void set_data_file_path::CopyFrom(const set_data_file_path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:set_data_file_path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool set_data_file_path::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void set_data_file_path::Swap(set_data_file_path* other) {
  if (other == this) return;
  InternalSwap(other);
}
void set_data_file_path::InternalSwap(set_data_file_path* other) {
  using std::swap;
  path_.Swap(&other->path_);
  swap(header_, other->header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata set_data_file_path::GetMetadata() const {
  protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void open_configuration_file::InitAsDefaultInstance() {
  ::_open_configuration_file_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
void open_configuration_file::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int open_configuration_file::kHeaderFieldNumber;
const int open_configuration_file::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

open_configuration_file::open_configuration_file()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ephys_5fedi_2eproto::InitDefaultsopen_configuration_file();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_configuration_file)
}
open_configuration_file::open_configuration_file(const open_configuration_file& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:open_configuration_file)
}

void open_configuration_file::SharedCtor() {
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
}

open_configuration_file::~open_configuration_file() {
  // @@protoc_insertion_point(destructor:open_configuration_file)
  SharedDtor();
}

void open_configuration_file::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void open_configuration_file::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* open_configuration_file::descriptor() {
  ::protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const open_configuration_file& open_configuration_file::default_instance() {
  ::protobuf_ephys_5fedi_2eproto::InitDefaultsopen_configuration_file();
  return *internal_default_instance();
}

open_configuration_file* open_configuration_file::New(::google::protobuf::Arena* arena) const {
  open_configuration_file* n = new open_configuration_file;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void open_configuration_file::Clear() {
// @@protoc_insertion_point(message_clear_start:open_configuration_file)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*path_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool open_configuration_file::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_configuration_file)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "open_configuration_file.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_configuration_file)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_configuration_file)
  return false;
#undef DO_
}

void open_configuration_file::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_configuration_file)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "open_configuration_file.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_configuration_file)
}

::google::protobuf::uint8* open_configuration_file::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_configuration_file)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "open_configuration_file.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_configuration_file)
  return target;
}

size_t open_configuration_file::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:open_configuration_file)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  return total_size;
}
size_t open_configuration_file::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_configuration_file)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void open_configuration_file::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_configuration_file)
  GOOGLE_DCHECK_NE(&from, this);
  const open_configuration_file* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const open_configuration_file>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_configuration_file)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_configuration_file)
    MergeFrom(*source);
  }
}

void open_configuration_file::MergeFrom(const open_configuration_file& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_configuration_file)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
  }
}

void open_configuration_file::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_configuration_file)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void open_configuration_file::CopyFrom(const open_configuration_file& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_configuration_file)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool open_configuration_file::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void open_configuration_file::Swap(open_configuration_file* other) {
  if (other == this) return;
  InternalSwap(other);
}
void open_configuration_file::InternalSwap(open_configuration_file* other) {
  using std::swap;
  path_.Swap(&other->path_);
  swap(header_, other->header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata open_configuration_file::GetMetadata() const {
  protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void acquisition::InitAsDefaultInstance() {
  ::_acquisition_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
void acquisition::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int acquisition::kHeaderFieldNumber;
const int acquisition::kCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

acquisition::acquisition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ephys_5fedi_2eproto::InitDefaultsacquisition();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acquisition)
}
acquisition::acquisition(const acquisition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  command_ = from.command_;
  // @@protoc_insertion_point(copy_constructor:acquisition)
}

void acquisition::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&command_) -
      reinterpret_cast<char*>(&header_)) + sizeof(command_));
}

acquisition::~acquisition() {
  // @@protoc_insertion_point(destructor:acquisition)
  SharedDtor();
}

void acquisition::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void acquisition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* acquisition::descriptor() {
  ::protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const acquisition& acquisition::default_instance() {
  ::protobuf_ephys_5fedi_2eproto::InitDefaultsacquisition();
  return *internal_default_instance();
}

acquisition* acquisition::New(::google::protobuf::Arena* arena) const {
  acquisition* n = new acquisition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void acquisition::Clear() {
// @@protoc_insertion_point(message_clear_start:acquisition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(header_ != NULL);
    header_->Clear();
  }
  command_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool acquisition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acquisition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .acquisition.command_type command = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::acquisition_command_type_IsValid(value)) {
            set_command(static_cast< ::acquisition_command_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acquisition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acquisition)
  return false;
#undef DO_
}

void acquisition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acquisition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required .acquisition.command_type command = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->command(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acquisition)
}

::google::protobuf::uint8* acquisition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acquisition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required .acquisition.command_type command = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->command(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acquisition)
  return target;
}

size_t acquisition::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:acquisition)
  size_t total_size = 0;

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  if (has_command()) {
    // required .acquisition.command_type command = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command());
  }

  return total_size;
}
size_t acquisition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acquisition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

    // required .acquisition.command_type command = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void acquisition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acquisition)
  GOOGLE_DCHECK_NE(&from, this);
  const acquisition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const acquisition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acquisition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acquisition)
    MergeFrom(*source);
  }
}

void acquisition::MergeFrom(const acquisition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acquisition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000002u) {
      command_ = from.command_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void acquisition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acquisition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void acquisition::CopyFrom(const acquisition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acquisition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool acquisition::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void acquisition::Swap(acquisition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void acquisition::InternalSwap(acquisition* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(command_, other->command_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata acquisition::GetMetadata() const {
  protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void recording::InitAsDefaultInstance() {
  ::_recording_default_instance_._instance.get_mutable()->header_ = const_cast< ::message_header*>(
      ::message_header::internal_default_instance());
}
void recording::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int recording::kHeaderFieldNumber;
const int recording::kCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

recording::recording()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ephys_5fedi_2eproto::InitDefaultsrecording();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:recording)
}
recording::recording(const recording& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::message_header(*from.header_);
  } else {
    header_ = NULL;
  }
  command_ = from.command_;
  // @@protoc_insertion_point(copy_constructor:recording)
}

void recording::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&command_) -
      reinterpret_cast<char*>(&header_)) + sizeof(command_));
}

recording::~recording() {
  // @@protoc_insertion_point(destructor:recording)
  SharedDtor();
}

void recording::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void recording::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* recording::descriptor() {
  ::protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const recording& recording::default_instance() {
  ::protobuf_ephys_5fedi_2eproto::InitDefaultsrecording();
  return *internal_default_instance();
}

recording* recording::New(::google::protobuf::Arena* arena) const {
  recording* n = new recording;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void recording::Clear() {
// @@protoc_insertion_point(message_clear_start:recording)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(header_ != NULL);
    header_->Clear();
  }
  command_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool recording::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:recording)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .recording.command_type command = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::recording_command_type_IsValid(value)) {
            set_command(static_cast< ::recording_command_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:recording)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:recording)
  return false;
#undef DO_
}

void recording::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:recording)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // required .recording.command_type command = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->command(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:recording)
}

::google::protobuf::uint8* recording::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:recording)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message_header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // required .recording.command_type command = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->command(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:recording)
  return target;
}

size_t recording::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:recording)
  size_t total_size = 0;

  if (has_header()) {
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  if (has_command()) {
    // required .recording.command_type command = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command());
  }

  return total_size;
}
size_t recording::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:recording)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .message_header header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);

    // required .recording.command_type command = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void recording::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:recording)
  GOOGLE_DCHECK_NE(&from, this);
  const recording* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const recording>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:recording)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:recording)
    MergeFrom(*source);
  }
}

void recording::MergeFrom(const recording& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:recording)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_header()->::message_header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000002u) {
      command_ = from.command_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void recording::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:recording)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void recording::CopyFrom(const recording& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:recording)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool recording::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void recording::Swap(recording* other) {
  if (other == this) return;
  InternalSwap(other);
}
void recording::InternalSwap(recording* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(command_, other->command_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata recording::GetMetadata() const {
  protobuf_ephys_5fedi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ephys_5fedi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
